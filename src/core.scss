@use "sass:math";

/* ============================================================
	General utilities
============================================================ */

@function line-height-as-multiple($line-height, $font-size)
{
	@return ceil(100000 * math.div($line-height, $font-size)) * 0.00001;
}

@mixin caps
{
	font-family: $font-caps;
	font-feature-settings: "c2sc" 1;
	text-transform: uppercase;
}

/* ============================================================
	Design system
============================================================ */

$full-width: 900px; /* approximately 90 characters */
$phone-width: 600px;

$font-size: 19px;
$line-height: 28px;
$paragraph-spacing: 16px;
$column-margin: $line-height;
$indent: 40px;
$line-height-multiple: line-height-as-multiple($line-height, $font-size);
$font-weight: 400;
$font-weight-bold: 600;

$font-size-compact: 17px;
$line-height-compact: 24px;
$line-height-multiple-compact: line-height-as-multiple($line-height-compact, $font-size-compact);
$font-weight-compact: 400;

$font-size-tiny: 15px;
$line-height-tiny: 24px;
$line-height-multiple-tiny: line-height-as-multiple($line-height-tiny, $font-size-tiny);
$font-weight-tiny: 400;

$font-body: Concourse, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", sans-serif;
$font-body-xheight-ratio: .45;
$font-accent: $font-body;
$font-caps: Concourse, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", sans-serif;
$font-mono: Inconsolata, Consolas, SFMono-Regular, "Roboto Mono", monospace;
$font-ui: $font-body;
$font-weight-ui: 600;
$font-size-ui: $font-size;

/* ============================================================
	Layout
============================================================ */


@mixin phone-only
{
	@media (max-width: #{$phone-width})
	{
		@content;
	}
}

@mixin not-phone
{
	@media (min-width: #{$phone-width + 1px})
	{
		@content;
	}
}

/* ============================================================
	UI states
============================================================ */

/*
	Use these mixins for any focusable elements with interactive states to make sure that
	:focus-visible works whenever possible, without breaking legacy browsers.

	IMPORTANT: Use these mixins IN THIS ORDER, and set the same properties in all of them.
	That may require explicitly setting properties to "unset" in the Rest state.

	(Pressed and Disabled are not required if you have no pressed or disabled states, of course.)

	button
	{
		@include rest { color: black; }
		@include hover { color: red; }
		@include pressed { color: blue; }
		@include disabled { color: grey; }
	}

*/

@mixin rest
{
	&
	{
		@content;
	}
	&:focus:not(:focus-visible):not(:hover)
	{
		@content;
	}
}

@mixin hover
{
	&:hover, &:focus
	{
		@content;
	}
}

@mixin pressed
{
	&:active
	{
		@content;
	}
}

@mixin disabled
{
	&:disabled, &:disabled:hover
	{
		@content;
	}
}

/* ========================================================= */
